{"version":3,"file":"static/js/115.03dce330.chunk.js","mappings":"+MACA,EAAwB,yBAAxB,EAAwD,wBAAxD,EAA2F,4BAA3F,EAAkI,4BAAlI,EAAwK,2BAAxK,EAAiN,+B,SCK3MA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kOA+Cd,EAhCsB,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAIC,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXC,IACEL,EAAMM,aACN,mCAAqCN,EAAMM,YAE7CC,IAAKP,EAAMQ,MACXC,OAAO,WAET,SAACb,EAAD,CACEO,UAAWC,EACXM,GAAI,CACFC,SAAgC,YAAtBV,EAASU,SAAT,UAAqCZ,EAArC,sBAAuDA,IAEnEa,MAAO,CAAEC,KAAMZ,EAASU,UAL1B,UAOE,eAAIR,UAAWC,EAAf,SAAiCJ,EAAMQ,YAI9C,ECtBD,EApBmB,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,MAAOM,EAAW,EAAXA,KAC3B,OACE,iCACE,eAAIX,UAAWC,EAAf,SAA2BI,IAC1BM,IACC,eAAIX,UAAWC,EAAf,SACGU,EAAKC,KAAI,SAAAf,GAAK,OACb,SAAC,EAAD,CAA8BD,GAAIC,EAAMD,GAAIC,MAAOA,GAA/BA,EAAMD,GADb,QAOxB,C,6EC2BD,UAtCe,SAAC,GAAgC,IAA9BiB,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAChC,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAqBC,GAArB,WAmBA,OACE,iCACE,kBAAMC,SAVO,SAAAC,GATS,IAACC,EAUzBD,EAAIE,iBACJV,EAAeG,GATfG,EAD6B,MADJG,EAYPN,GAXgB,CAAEM,MAAAA,GAAU,CAAC,GAa/CL,EAAc,GACf,EAIG,WACE,kBAAOO,SAfI,SAAAH,GACfJ,EAAcI,EAAII,OAAOC,MAC1B,EAagCA,MAAOV,KAClC,mBAAQW,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAYhB,KAAMG,MAGvB,C","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieListItem.jsx","components/MovieList/MoviesList.jsx","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieList_title__QyMtJ\",\"list\":\"MovieList_list__yjDCC\",\"listItem\":\"MovieList_listItem__vOVoz\",\"listLink\":\"MovieList_listLink__EbNXd\",\"listImg\":\"MovieList_listImg__MzqVu\",\"movieTittle\":\"MovieList_movieTittle__Vz7kp\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\n\nconst ItemLink = styled(NavLink)`\n  border-radius: 4px;\n  text-decoration: none;\n  color: #320975;\n  font-weight: 500;\n\n  &.active {\n    color: #a70960;\n  }\n  &:hover,\n  &:focus {\n    color: #a70960;\n    outline: none;\n  }\n`;\nconst MovieListItem = ({ id, movie }) => {\n  const location = useLocation();\n\n  return (\n    <li className={css.listItem}>\n      <img\n        className={css.listImg}\n        src={\n          movie.poster_path &&\n          `https://image.tmdb.org/t/p/w500/` + movie.poster_path\n        }\n        alt={movie.title}\n        height=\"280px\"\n      />\n      <ItemLink\n        className={css.listLink}\n        to={{\n          pathname: location.pathname === '/movies' ? `${id} ` : `movies/${id}`,\n        }}\n        state={{ from: location.pathname }}\n      >\n        <h2 className={css.movieTittle}>{movie.title}</h2>\n      </ItemLink>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  movie: PropTypes.object.isRequired,\n};\n\nexport default MovieListItem;\n","import PropTypes from 'prop-types';\n\nimport MovieListItem from 'components/MovieList/MovieListItem';\nimport css from './MovieList.module.css';\nconst MoviesList = ({ title, list }) => {\n  return (\n    <>\n      <h2 className={css.title}>{title}</h2>\n      {list && (\n        <ul className={css.list}>\n          {list.map(movie => (\n            <MovieListItem key={movie.id} id={movie.id} movie={movie} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  title: PropTypes.string,\n  list: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport MoviesList from 'components/MovieList/MoviesList';\n\nconst Movies = ({ onSubmitHanler, movies }) => {\n  const [inputValue, setInputValue] = useState('');\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const updateQueryString = (query, value) => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const onChange = evt => {\n    setInputValue(evt.target.value);\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    onSubmitHanler(inputValue);\n    updateQueryString(inputValue, `query`);\n\n    setInputValue('');\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input onChange={onChange} value={inputValue}></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList list={movies} />\n    </>\n  );\n};\n\nMovies.propTypes = {\n  onSubmitHanler: PropTypes.func.isRequired,\n  movies: PropTypes.array.isRequired,\n};\n\nexport default Movies;\n"],"names":["ItemLink","styled","NavLink","id","movie","location","useLocation","className","css","src","poster_path","alt","title","height","to","pathname","state","from","list","map","onSubmitHanler","movies","useState","inputValue","setInputValue","useSearchParams","setSearchParams","onSubmit","evt","query","preventDefault","onChange","target","value","type"],"sourceRoot":""}