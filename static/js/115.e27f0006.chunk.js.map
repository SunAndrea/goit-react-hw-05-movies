{"version":3,"file":"static/js/115.e27f0006.chunk.js","mappings":"+MACA,EAAwB,yBAAxB,EAAwD,wBAAxD,EAA2F,4BAA3F,EAAkI,4B,SCK5HA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kOAqCd,EArBsB,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,UACE,SAACR,EAAD,CACEO,UAAWC,EACXC,GAAI,CACFC,SAAgC,YAAtBL,EAASK,SAAT,UAAqCP,EAArC,sBAAuDA,IAHrE,UAME,wBAAKC,EAAMO,WAIlB,ECZD,EApBmB,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC3B,OACE,iCACE,eAAIL,UAAWC,EAAf,SAA2BG,IAC1BC,IACC,eAAIL,UAAWC,EAAf,SACGI,EAAKC,KAAI,SAAAT,GAAK,OACb,SAAC,EAAD,CAA8BD,GAAIC,EAAMD,GAAIC,MAAOA,GAA/BA,EAAMD,GADb,QAOxB,C,6EC0BD,UArCe,SAAC,GAAgC,IAAD,EAA7BW,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAChC,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEe,EAAGD,EAAaE,IAAI,SAiBnC,OACE,iCACE,kBAAMC,SARO,SAAAC,GATS,IAAAC,EAUxBD,EAAIE,iBACJZ,EAAeG,GATfI,EAD6B,MADLI,EAYNR,GAXgB,CAAEQ,MAAAA,GAAU,CAAC,GAY/CP,EAAc,GACf,EAGG,WACE,kBAAOS,SAbI,SAAAH,GACfN,EAAcM,EAAII,OAAOC,MAC1B,EAWgCA,MAAOZ,KAClC,mBAAQa,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAYlB,KAAMG,MAGvB,C","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieListItem.jsx","components/MovieList/MoviesList.jsx","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieList_title__QyMtJ\",\"list\":\"MovieList_list__yjDCC\",\"listItem\":\"MovieList_listItem__vOVoz\",\"listLink\":\"MovieList_listLink__EbNXd\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\n\nconst ItemLink = styled(NavLink)`\n  border-radius: 4px;\n  text-decoration: none;\n  color: #320975;\n  font-weight: 500;\n\n  &.active {\n    color: #a70960;\n  }\n  &:hover,\n  &:focus {\n    color: #a70960;\n    outline: none;\n  }\n`;\n\nconst MovieListItem = ({ id, movie }) => {\n  const location = useLocation();\n  return (\n    <li className={css.listItem}>\n      <ItemLink\n        className={css.listLink}\n        to={{\n          pathname: location.pathname === '/movies' ? `${id} ` : `movies/${id}`,\n        }}\n      >\n        <h2>{movie.title}</h2>\n      </ItemLink>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  movie: PropTypes.object.isRequired,\n};\n\nexport default MovieListItem;\n","import PropTypes from 'prop-types';\n\nimport MovieListItem from 'components/MovieList/MovieListItem';\nimport css from './MovieList.module.css';\nconst MoviesList = ({ title, list }) => {\n  return (\n    <>\n      <h2 className={css.title}>{title}</h2>\n      {list && (\n        <ul className={css.list}>\n          {list.map(movie => (\n            <MovieListItem key={movie.id} id={movie.id} movie={movie} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  title: PropTypes.string,\n  list: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport MoviesList from 'components/MovieList/MoviesList';\n\nconst Movies = ({ onSubmitHanler, movies }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  // eslint-disable-next-line no-unused-vars\n  const queryName = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const onChange = evt => {\n    setInputValue(evt.target.value);\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    onSubmitHanler(inputValue);\n    updateQueryString(inputValue);\n    setInputValue('');\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input onChange={onChange} value={inputValue}></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList list={movies} />\n    </>\n  );\n};\n\nMovies.propTypes = {\n  onSubmitHanler: PropTypes.func.isRequired,\n  movies: PropTypes.array.isRequired,\n};\n\nexport default Movies;\n"],"names":["ItemLink","styled","NavLink","id","movie","location","useLocation","className","css","to","pathname","title","list","map","onSubmitHanler","movies","useState","inputValue","setInputValue","useSearchParams","searchParams","setSearchParams","get","onSubmit","evt","query","preventDefault","onChange","target","value","type"],"sourceRoot":""}